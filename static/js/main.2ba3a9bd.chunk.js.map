{"version":3,"sources":["firebase.js","util/crypter.js","redux/user.js","pages/login.js","pages/encriptador/texto.js","util/fileManager.js","pages/encriptador/archivos.js","pages/encriptador/listaEncriptada.js","pages/bitacora.js","pages/encriptador/encriptador.js","pages/desencriptador/listaEncriptada.js","pages/desencriptador/desencriptador.js","router.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","Crypter","getEncrypted","tipo","word","this","DESEncrypt","RC4Encrypt","getDesencrypted","DESDecrypt","RC4Decrypt","CryptoKey","CryptoJS","enc","Hex","parse","AESEncrypt","AES","encrypt","mode","ECB","toString","AESDecrypt","decrypt","Utf8","TripleDES","RC4","defaultState","session","undefined","sessionStorage","JSON","getItem","selectedFile","SET_SESSION","SET_SELECTED_FILE","deleteSession","dispatch","getState","removeItem","type","payload","Login","useState","correo","setCorreo","contraseña","setContraseña","tipoUsuario","setTipoUsuario","registrarse","setRegistrarse","nombre","setNombre","errorLogin","setErrorLogin","loading","setLoading","errorCorreo","seterrorCorreo","errorNombre","setErrorNombre","errorTipo","setErrorTipo","userStore","useSelector","state","user","useDispatch","class","to","className","TextField","variant","name","label","value","onChange","e","target","CircularProgress","color","Button","size","onClick","collection","where","get","then","response","empty","docs","data","setItem","stringify","setSesion","helperText","error","FormControl","fullWidth","InputLabel","Select","displayEmpty","MenuItem","FormHelperText","ref","_","isEmpty","isNull","doc","set","usuario","password","fecha","Timestamp","now","startIcon","Texto","contenido","setContenido","setTipo","errorContenido","setErrorContenido","validar","console","log","setBitacora","movimiento","tipoArchivo","placeholder","multiline","rows","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","trim","tipoEncriptacion","FileManager","base64toBlob","base64Data","contentType","sliceSize","byteCharacters","atob","bytesLength","length","slicesCount","Math","ceil","byteArrays","Array","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","blobToFile","theBlob","fileName","lastModifiedDate","Date","Archivos","uploading","setUploading","progress","setProgress","textProgress","setTextProgress","hidden","id","files","htmlFor","reader","FileReader","readAsDataURL","onload","text","result","split","typeFile","blob","upload","child","put","on","snapshot","onProgress","bytesTransferred","totalBytes","getDownloadURL","url","LinearProgress","ListaEncriptada","lista","setLista","useEffect","firtTime","listaEscucha","onSnapshot","listaFinal","forEach","el","object","some","new","push","sort","a","b","seconds","List","map","objeto","icono","ListItem","ListItemIcon","ListItemText","primary","secondary","moment","unix","format","Bitacora","open","setOpen","setRows","finalRow","element","Modal","onClose","TableContainer","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","scope","IconButton","TabPanel","props","children","index","other","role","aria-labelledby","Box","p","Typography","Encriptador","React","setValue","AppBar","position","Toolbar","noWrap","endIcon","edge","Tabs","event","newValue","Tab","desencriptar","setSelectedFile","button","Desencriptador","file","setFile","isEncrypted","setIsEncrypted","linkArchivo","setLinkArchivo","isDocument","setIsDocument","textoDesencriptado","setTextoDesencriptado","isDecrypting","setIsDecrypting","style","width","fontSize","fetch","resp","originalFile","pop","extension","blobDecrypted","window","URL","createObjectURL","link","href","download","alignSelf","Router","exact","path","Component","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","theme","createMuiTheme","palette","light","main","dark","contrastText","App","locale","store","createStore","applyMiddleware","thunk","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba3a9bd.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: 'AIzaSyARwyzp33xPGwD8G_jCL0yHGK0tvJYbYyE',\r\n    authDomain: 'crypto-unach.firebaseapp.com',\r\n    projectId: 'crypto-unach',\r\n    storageBucket: 'crypto-unach.appspot.com',\r\n    messagingSenderId: '104157211591',\r\n    appId: '1:104157211591:web:1226650a5a9d5f6acf07e2',\r\n    measurementId: 'G-HJ28XHC4HK',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\nconst firestore = firebase.firestore();\r\nconst storage = firebase.storage();\r\n\r\nexport { firestore, storage };\r\n","import CryptoJS from 'crypto-js';\r\n\r\nvar Crypter = {\r\n    getEncrypted(tipo, word) {\r\n        switch (tipo) {\r\n            case 'DES':\r\n                return this.DESEncrypt(word);\r\n            case 'RC4':\r\n                return this.RC4Encrypt(word);\r\n            default:\r\n                return '';\r\n        }\r\n    },\r\n    getDesencrypted(tipo, word) {\r\n        switch (tipo) {\r\n            case 'DES':\r\n                return this.DESDecrypt(word);\r\n            case 'RC4':\r\n                return this.RC4Decrypt(word);\r\n            default:\r\n                return '';\r\n        }\r\n    },\r\n    CryptoKey() {\r\n        return CryptoJS.enc.Hex.parse('000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f');\r\n    },\r\n    AESEncrypt(word) {\r\n        return CryptoJS.AES.encrypt(word, this.CryptoKey(), { mode: CryptoJS.mode.ECB }).toString();\r\n    },\r\n    AESDecrypt(word) {\r\n        return CryptoJS.AES.decrypt(word, this.CryptoKey(), { mode: CryptoJS.mode.ECB }).toString(CryptoJS.enc.Utf8);\r\n    },\r\n    DESEncrypt(word) {\r\n        return CryptoJS.TripleDES.encrypt(word, this.CryptoKey(), { mode: CryptoJS.mode.ECB }).toString();\r\n    },\r\n    DESDecrypt(word) {\r\n        return CryptoJS.TripleDES.decrypt(word, this.CryptoKey(), { mode: CryptoJS.mode.ECB }).toString(CryptoJS.enc.Utf8);\r\n    },\r\n    RC4Encrypt(word) {\r\n        return CryptoJS.RC4.encrypt(word, this.CryptoKey(), { mode: CryptoJS.mode.ECB }).toString();\r\n    },\r\n    RC4Decrypt(word) {\r\n        return CryptoJS.RC4.decrypt(word, this.CryptoKey(), { mode: CryptoJS.mode.ECB }).toString(CryptoJS.enc.Utf8);\r\n    },\r\n};\r\nexport default Crypter;\r\n","//CONSTANTES\r\nconst defaultState = {\r\n    session: sessionStorage.session !== undefined ? JSON.parse(sessionStorage.getItem('session')) : null,\r\n    selectedFile: null,\r\n};\r\n\r\n//TYPES\r\nconst SET_SESSION = 'SET_SESSION';\r\nconst SET_SELECTED_FILE = 'SET_SELECTED_FILE';\r\n\r\n//REDUCER\r\nexport default function userReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SET_SESSION:\r\n            return { ...state, session: action.payload };\r\n        case SET_SELECTED_FILE:\r\n            return { ...state, selectedFile: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//ACCIONES\r\nexport const setSesion = (user) => (dispatch, getState) => {\r\n    sessionStorage.setItem('session', JSON.stringify(user));\r\n    dispatch({\r\n        type: SET_SESSION,\r\n        payload: user,\r\n    });\r\n};\r\n\r\nexport const setSelectedFile = (doc) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: SET_SELECTED_FILE,\r\n        payload: doc,\r\n    });\r\n};\r\n\r\nexport const deleteSession = () => (dispatch, getState) => {\r\n    sessionStorage.removeItem('session');\r\n    dispatch({\r\n        type: SET_SESSION,\r\n        payload: null,\r\n    });\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    InputLabel,\r\n    CircularProgress,\r\n    FormHelperText,\r\n} from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport firebase, { firestore } from './../firebase';\r\nimport Crypter from './../util/crypter';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSesion } from './../redux/user';\r\nimport { Redirect } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nexport default function Login() {\r\n    const [correo, setCorreo] = useState('');\r\n    const [contraseña, setContraseña] = useState('');\r\n    const [tipoUsuario, setTipoUsuario] = useState(null);\r\n    const [registrarse, setRegistrarse] = useState(false);\r\n    const [nombre, setNombre] = useState('');\r\n\r\n    const [errorLogin, setErrorLogin] = useState(false);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorCorreo, seterrorCorreo] = useState(false);\r\n    const [errorNombre, setErrorNombre] = useState(false);\r\n    const [errorTipo, setErrorTipo] = useState(false);\r\n\r\n    //section:Para uso del redux y la sesion de usuario\r\n    const userStore = useSelector((state) => state.user.session);\r\n    const dispatch = useDispatch();\r\n\r\n    var iniciarSesion = () => {\r\n        setLoading(true);\r\n        firestore\r\n            .collection('users')\r\n            .where('usuario', '==', Crypter.AESEncrypt(correo))\r\n            .where('password', '==', Crypter.AESEncrypt(contraseña))\r\n            .get()\r\n            .then((response) => {\r\n                if (!response.empty) {\r\n                    var user = response.docs[0].data();\r\n                    dispatch(setSesion(user));\r\n                } else {\r\n                    setErrorLogin(true);\r\n                }\r\n                setLoading(false);\r\n            });\r\n    };\r\n    var validate = () => {\r\n        if (_.isEmpty(nombre)) {\r\n            setErrorNombre(true);\r\n            return false;\r\n        } else {\r\n            setErrorNombre(false);\r\n        }\r\n\r\n        if (_.isNull(tipoUsuario)) {\r\n            setErrorTipo(true);\r\n            return false;\r\n        } else {\r\n            setErrorTipo(false);\r\n        }\r\n        return true;\r\n    };\r\n    var handleRegistrarse = () => {\r\n        var ref = firestore.collection('users');\r\n        ref.where('usuario', '==', Crypter.AESEncrypt(correo))\r\n            .get()\r\n            .then((response) => {\r\n                if (response.empty) {\r\n                    seterrorCorreo(false);\r\n                    if (validate()) {\r\n                        ref.doc().set({\r\n                            usuario: Crypter.AESEncrypt(correo),\r\n                            password: Crypter.AESEncrypt(contraseña),\r\n                            fecha: firebase.firestore.Timestamp.now(),\r\n                            tipo: tipoUsuario,\r\n                            nombre: Crypter.AESEncrypt(nombre),\r\n                        });\r\n                    }\r\n                } else {\r\n                    seterrorCorreo(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            {userStore != null ? (\r\n                userStore.tipo == 'encriptador' ? (\r\n                    <Redirect to=\"/encriptador\" />\r\n                ) : (\r\n                    <Redirect to=\"/desencriptador\" />\r\n                )\r\n            ) : (\r\n                <Redirect to=\"/\" />\r\n            )}\r\n            {!registrarse && (\r\n                <form class=\"login-wrap\">\r\n                    <h1 class=\"color-black align-center\">Inicio de Sesión</h1>\r\n                    {errorLogin && (\r\n                        <div className=\"error-login\">\r\n                            No se encontro este usuario o la contraseña es incorrecta. Por favor corriga los datos e\r\n                            intentelo de nuevo.\r\n                        </div>\r\n                    )}\r\n\r\n                    <div>\r\n                        <div class=\"form-group\">\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                name=\"correo\"\r\n                                label=\"Correo\"\r\n                                value={correo}\r\n                                onChange={(e) => {\r\n                                    setCorreo(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                name=\"contraseña\"\r\n                                label=\"Contraseña\"\r\n                                value={contraseña}\r\n                                onChange={(e) => {\r\n                                    setContraseña(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {loading && <CircularProgress color=\"secondary\" />}\r\n\r\n                    <div class=\"buttons-login\">\r\n                        <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={iniciarSesion}>\r\n                            Iniciar sesión\r\n                        </Button>\r\n                        <Button color=\"primary\" size=\"large\" variant=\"outlined\" onClick={() => setRegistrarse(true)}>\r\n                            Registrarse\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n            {registrarse && (\r\n                <form class=\"login-wrap\">\r\n                    <h1 class=\"color-black align-center\">Registrarse</h1>\r\n                    <div>\r\n                        <div class=\"form-group\">\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                name=\"nombre\"\r\n                                label=\"Nombre\"\r\n                                value={nombre}\r\n                                onChange={(e) => {\r\n                                    setNombre(e.target.value);\r\n                                }}\r\n                                helperText={errorNombre && 'Por favor, proporcione sus nombre'}\r\n                                error={errorNombre}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                type=\"text\"\r\n                                name=\"correo\"\r\n                                label=\"Usuario\"\r\n                                value={correo}\r\n                                onChange={(e) => {\r\n                                    setCorreo(e.target.value);\r\n                                }}\r\n                                error={errorCorreo}\r\n                                helperText={errorCorreo && 'Este nombre de usuario ya existe. Por favor utilice otro.'}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                name=\"contraseña\"\r\n                                label=\"Contraseña\"\r\n                                value={contraseña}\r\n                                onChange={(e) => {\r\n                                    setContraseña(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <FormControl fullWidth variant=\"outlined\" error={errorTipo}>\r\n                                <InputLabel>Tipo de usuario</InputLabel>\r\n                                <Select\r\n                                    label=\"Tipo de usuario\"\r\n                                    value={tipoUsuario}\r\n                                    onChange={(e) => {\r\n                                        setTipoUsuario(e.target.value);\r\n                                    }}\r\n                                    displayEmpty\r\n                                >\r\n                                    <MenuItem value=\"encriptador\">Encriptador</MenuItem>\r\n                                    <MenuItem value=\"desencriptador\">Desencriptador</MenuItem>\r\n                                </Select>\r\n                                {errorTipo && <FormHelperText>Seleccione un tipo de usuario.</FormHelperText>}\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"buttons-login\">\r\n                        <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={handleRegistrarse}>\r\n                            Registrarse\r\n                        </Button>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            variant=\"outlined\"\r\n                            onClick={() => setRegistrarse(false)}\r\n                            startIcon={<ArrowBackIosIcon />}\r\n                        >\r\n                            Regresar\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    FormHelperText,\r\n} from '@material-ui/core';\r\n\r\nimport firebase, { firestore } from './../../firebase';\r\nimport Crypter from './../../util/crypter';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Texto() {\r\n    const [nombre, setNombre] = useState('');\r\n    const [contenido, setContenido] = useState('');\r\n    const [tipo, setTipo] = useState(null);\r\n\r\n    const userStore = useSelector((state) => state.user.session);\r\n    const [errorNombre, setErrorNombre] = useState(false);\r\n    const [errorContenido, setErrorContenido] = useState(false);\r\n    const [errorTipo, setErrorTipo] = useState(false);\r\n\r\n    const encriptar = () => {\r\n        if (validar()) {\r\n            firestore\r\n                .collection('data')\r\n                .doc()\r\n                .set({\r\n                    tipo: 'texto',\r\n                    nombre: Crypter.getEncrypted(tipo.trim(), nombre),\r\n                    contenido: Crypter.getEncrypted(tipo.trim(), contenido),\r\n                    fecha: firebase.firestore.Timestamp.now(),\r\n                    tipoEncriptacion: tipo,\r\n                });\r\n            setBitacora();\r\n            setNombre('');\r\n            setContenido('');\r\n            setTipo(null);\r\n        }\r\n    };\r\n\r\n    const validar = () => {\r\n        if (_.isEmpty(nombre)) {\r\n            setErrorNombre(true);\r\n            return false;\r\n        } else {\r\n            setErrorNombre(false);\r\n        }\r\n        if (_.isEmpty(contenido)) {\r\n            setErrorContenido(true);\r\n            return false;\r\n        } else {\r\n            setErrorContenido(false);\r\n        }\r\n        if (_.isNull(tipo)) {\r\n            setErrorTipo(true);\r\n            return false;\r\n        } else {\r\n            setErrorTipo(false);\r\n        }\r\n        console.log(tipo);\r\n        return true;\r\n    };\r\n    const setBitacora = () => {\r\n        firestore\r\n            .collection('bitacora')\r\n            .doc()\r\n            .set({\r\n                fecha: firebase.firestore.Timestamp.now(),\r\n                movimiento: Crypter.AESEncrypt(\r\n                    'El usuario ' + Crypter.AESDecrypt(userStore.usuario) + ' hizo una encriptacion del archivo: ' + nombre\r\n                ),\r\n                tipoArchivo: Crypter.AESEncrypt('texto'),\r\n                usuario: userStore.usuario,\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div class=\"flex column\">\r\n            <TextField\r\n                label=\"Nombre del archivo\"\r\n                variant=\"outlined\"\r\n                placeholder='Ingrese el nombre del archivo ej.: \"Mensaje secreto\"'\r\n                value={nombre}\r\n                onChange={(e) => setNombre(e.target.value)}\r\n                helperText=\"Ingrese un nombre para su archivo\"\r\n                error={errorNombre}\r\n            />\r\n            <br />\r\n            <TextField\r\n                value={contenido}\r\n                onChange={(e) => setContenido(e.target.value)}\r\n                label=\"Ingrese el texto a encriptar\"\r\n                multiline\r\n                rows={8}\r\n                helperText=\"No puede dejar vacio el contenido\"\r\n                variant=\"outlined\"\r\n                error={errorContenido}\r\n            />\r\n            <br />\r\n            <FormControl component=\"fieldset\" error={errorTipo}>\r\n                <FormLabel component=\"legend\">Tipo de Cifrado</FormLabel>\r\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={tipo} onChange={(e) => setTipo(e.target.value)}>\r\n                    <FormControlLabel value=\"DES\" control={<Radio />} label=\"DES\" />\r\n                    <FormControlLabel value=\"RC4\" control={<Radio />} label=\"RC4\" />\r\n                </RadioGroup>\r\n                {errorTipo && <FormHelperText>Seleccione un tipo de encriptado</FormHelperText>}\r\n            </FormControl>\r\n\r\n            <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={encriptar}>\r\n                Encriptar\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n","var FileManager = {\r\n    base64toBlob(base64Data, contentType) {\r\n        contentType = contentType || '';\r\n        var sliceSize = 1024;\r\n        var byteCharacters = atob(base64Data);\r\n        var bytesLength = byteCharacters.length;\r\n        var slicesCount = Math.ceil(bytesLength / sliceSize);\r\n        var byteArrays = new Array(slicesCount);\r\n\r\n        for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\r\n            var begin = sliceIndex * sliceSize;\r\n            var end = Math.min(begin + sliceSize, bytesLength);\r\n\r\n            var bytes = new Array(end - begin);\r\n            for (var offset = begin, i = 0; offset < end; ++i, ++offset) {\r\n                bytes[i] = byteCharacters[offset].charCodeAt(0);\r\n            }\r\n            byteArrays[sliceIndex] = new Uint8Array(bytes);\r\n        }\r\n        return new Blob(byteArrays, { type: contentType });\r\n    },\r\n    blobToFile(theBlob, fileName) {\r\n        //A Blob() is almost a File() - it's just missing the two properties below which we will add\r\n        theBlob.lastModifiedDate = new Date();\r\n        theBlob.name = fileName;\r\n        return theBlob;\r\n    },\r\n};\r\n\r\nexport default FileManager;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    FormHelperText,\r\n    LinearProgress,\r\n} from '@material-ui/core';\r\n\r\nimport _ from 'lodash';\r\nimport firebase, { firestore, storage } from './../../firebase';\r\nimport Crypter from './../../util/crypter';\r\nimport FileManager from './../../util/fileManager';\r\n\r\nimport { useSelector } from 'react-redux';\r\nexport default function Archivos() {\r\n    const [contenido, setContenido] = useState(null);\r\n    const [tipo, setTipo] = useState(null);\r\n\r\n    const [errorContenido, setErrorContenido] = useState(false);\r\n    const [errorTipo, setErrorTipo] = useState(false);\r\n\r\n    const [uploading, setUploading] = useState(false);\r\n    const [progress, setProgress] = useState(0);\r\n    const [textProgress, setTextProgress] = useState('');\r\n\r\n    const userStore = useSelector((state) => state.user.session);\r\n\r\n    const encriptar = () => {\r\n        if (validar()) {\r\n            setUploading(true);\r\n            setTextProgress('Encriptando el archivo...');\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(contenido);\r\n            reader.onload = (e) => {\r\n                var text = e.target.result.split('base64,');\r\n                text = text[1];\r\n                text = Crypter.getEncrypted(tipo, text);\r\n                var fileName = contenido.name;\r\n                var typeFile = contenido.type;\r\n                var blob = FileManager.base64toBlob(text, typeFile);\r\n\r\n                var ref = storage.ref().child(fileName);\r\n\r\n                var upload = ref.put(blob);\r\n\r\n                upload.on(\r\n                    'state_changed',\r\n                    function (snapshot) {\r\n                        // Observe state change events such as progress, pause, and resume\r\n                        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                        setTextProgress('¡Archivo encriptado correctamente!. Subiendio archivo...');\r\n                        var onProgress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                        setProgress(onProgress);\r\n                    },\r\n                    function (error) {\r\n                        // Handle unsuccessful uploads\r\n                    },\r\n                    function () {\r\n                        // Handle successful uploads on complete\r\n                        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n                        upload.snapshot.ref.getDownloadURL().then(function (url) {\r\n                            setTextProgress(\r\n                                <span>\r\n                                    ¡Completado! <br /> El archivo fue encriptado y subido correctamente al servidor.\r\n                                </span>\r\n                            );\r\n                            firestore\r\n                                .collection('data')\r\n                                .doc()\r\n                                .set({\r\n                                    tipo: 'documento',\r\n                                    nombre: Crypter.getEncrypted(tipo.trim(), fileName),\r\n                                    contenido: Crypter.getEncrypted(tipo.trim(), url),\r\n                                    fecha: firebase.firestore.Timestamp.now(),\r\n                                    tipoEncriptacion: tipo,\r\n                                })\r\n                                .then(() => {\r\n                                    setContenido(null);\r\n                                    setTipo(null);\r\n                                });\r\n                            setBitacora();\r\n                        });\r\n                    }\r\n                );\r\n            };\r\n        }\r\n    };\r\n    const setBitacora = () => {\r\n        firestore\r\n            .collection('bitacora')\r\n            .doc()\r\n            .set({\r\n                fecha: firebase.firestore.Timestamp.now(),\r\n                movimiento: Crypter.AESEncrypt(\r\n                    'El usuario ' +\r\n                        Crypter.AESDecrypt(userStore.usuario) +\r\n                        ' hizo una encriptacion del archivo: ' +\r\n                        contenido.name\r\n                ),\r\n                tipoArchivo: Crypter.AESEncrypt('documento'),\r\n                usuario: userStore.usuario,\r\n            });\r\n    };\r\n\r\n    const validar = () => {\r\n        if (_.isNull(contenido)) {\r\n            setErrorContenido(true);\r\n            return false;\r\n        } else {\r\n            setErrorContenido(false);\r\n        }\r\n        if (_.isNull(tipo)) {\r\n            setErrorTipo(true);\r\n            return false;\r\n        } else {\r\n            setErrorTipo(false);\r\n        }\r\n        console.log(tipo);\r\n        return true;\r\n    };\r\n    return (\r\n        <div class=\"flex column\">\r\n            {!uploading && (\r\n                <>\r\n                    <FormControl error={errorContenido}>\r\n                        <label>Archivo seleccionado: {contenido !== null && contenido.name}</label>\r\n                        <input\r\n                            hidden\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={(e) => setContenido(e.target.files[0])}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button fullWidth variant=\"contained\" color=\"primary\" component=\"span\">\r\n                                Upload\r\n                            </Button>\r\n                        </label>\r\n                        {errorContenido && <FormHelperText>Seleccione un archivo para encriptar</FormHelperText>}\r\n                    </FormControl>\r\n                    <br />\r\n                    <FormControl component=\"fieldset\" error={errorTipo}>\r\n                        <FormLabel component=\"legend\">Tipo de Cifrado</FormLabel>\r\n                        <RadioGroup\r\n                            aria-label=\"gender\"\r\n                            name=\"gender1\"\r\n                            value={tipo}\r\n                            onChange={(e) => setTipo(e.target.value)}\r\n                        >\r\n                            <FormControlLabel value=\"DES\" control={<Radio />} label=\"DES\" />\r\n                            <FormControlLabel value=\"RC4\" control={<Radio />} label=\"RC4\" />\r\n                        </RadioGroup>\r\n                        {errorTipo && <FormHelperText>Seleccione un tipo de encriptado</FormHelperText>}\r\n                    </FormControl>\r\n                    <br />\r\n\r\n                    <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={encriptar}>\r\n                        Encriptar\r\n                    </Button>\r\n                </>\r\n            )}\r\n\r\n            {uploading && (\r\n                <>\r\n                    <h4 className=\"progress-text\">{textProgress}</h4>\r\n                    <LinearProgress variant=\"determinate\" color=\"secondary\" value={progress} />\r\n                    {progress == 100 && (\r\n                        <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => setUploading(false)}>\r\n                            Encriptar otro archivo\r\n                        </Button>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nimport { firestore } from './../../firebase';\r\nimport Crypter from './../../util/crypter';\r\n\r\nimport moment from 'moment';\r\n\r\nexport default function ListaEncriptada() {\r\n    const [lista, setLista] = useState([]);\r\n\r\n    useEffect(() => {\r\n        var firtTime = true;\r\n        var listaEscucha = [];\r\n        var ref = firestore.collection('data').onSnapshot((response) => {\r\n            var listaFinal = [];\r\n            response.forEach((el) => {\r\n                var object = el.data();\r\n                object.id = el.id;\r\n                if (!firtTime && !listaEscucha.some((lista) => lista.id === object.id)) {\r\n                    object.new = true;\r\n                }\r\n\r\n                listaFinal.push(object);\r\n            });\r\n            listaFinal = listaFinal.sort((a, b) => {\r\n                if (a.fecha.seconds < b.fecha.seconds) {\r\n                    return 1;\r\n                }\r\n                if (a.fecha.seconds > b.fecha.seconds) {\r\n                    return -1;\r\n                }\r\n                // a debe ser igual b\r\n                return 0;\r\n            });\r\n            setLista(listaFinal);\r\n            listaEscucha = listaFinal;\r\n            firtTime = false;\r\n        });\r\n        return () => {\r\n            ref();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div class=\"menu-derecho\">\r\n            <div>\r\n                <List component=\"nav\">\r\n                    {lista.map((objeto) => {\r\n                        var icono = '';\r\n                        if (objeto.tipo === 'documento') {\r\n                            icono = <DescriptionIcon />;\r\n                        } else {\r\n                            icono = <TextFieldsIcon />;\r\n                        }\r\n\r\n                        var nombre = Crypter.getDesencrypted(objeto.tipoEncriptacion, objeto.nombre);\r\n\r\n                        return (\r\n                            <ListItem className={objeto.new && 'new-item-list'}>\r\n                                <ListItemIcon>{icono}</ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={nombre}\r\n                                    secondary={moment.unix(objeto.fecha.seconds).format('LLLL')}\r\n                                />\r\n                            </ListItem>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, IconButton } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport moment from 'moment';\r\n\r\nimport Crypter from './../util/crypter';\r\n\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport { firestore } from './../firebase';\r\n\r\nexport default function Bitacora() {\r\n    const [open, setOpen] = useState(false);\r\n    function createData(name, tipo, usuario, fecha) {\r\n        return { name, tipo, usuario, fecha };\r\n    }\r\n    const [rows, setRows] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            firestore\r\n                .collection('bitacora')\r\n                .get()\r\n                .then((data) => {\r\n                    var finalRow = [];\r\n                    data.forEach((element) => {\r\n                        var e = element.data();\r\n                        finalRow.push(\r\n                            createData(\r\n                                Crypter.AESDecrypt(e.movimiento),\r\n                                Crypter.AESDecrypt(e.tipoArchivo),\r\n                                Crypter.AESDecrypt(e.usuario),\r\n                                e.fecha.seconds\r\n                            )\r\n                        );\r\n                    });\r\n                    finalRow = finalRow.sort((a, b) => {\r\n                        if (a.fecha < b.fecha) {\r\n                            return 1;\r\n                        }\r\n                        if (a.fecha > b.fecha) {\r\n                            return -1;\r\n                        }\r\n                        // a debe ser igual b\r\n                        return 0;\r\n                    });\r\n                    console.log(finalRow);\r\n                    setRows(finalRow);\r\n                });\r\n        }\r\n    }, [open]);\r\n    return (\r\n        <>\r\n            <Modal open={open} onClose={() => setOpen(false)} className=\"flex center modal\">\r\n                <TableContainer component={Paper} color=\"primary\" className=\"bitacora\">\r\n                    <Table stickyHeader aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Descripción</TableCell>\r\n                                <TableCell align=\"center\">Tipo archivo</TableCell>\r\n                                <TableCell align=\"center\">Usuario</TableCell>\r\n                                <TableCell align=\"center\">Fecha</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.tipo}</TableCell>\r\n                                    <TableCell align=\"right\">{row.usuario}</TableCell>\r\n                                    <TableCell align=\"right\">{moment.unix(row.fecha).format('LLLL')}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Modal>\r\n            <IconButton onClick={() => setOpen(true)}>\r\n                <AssignmentIcon />\r\n            </IconButton>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    AppBar,\r\n    Tab,\r\n    Tabs,\r\n    Box,\r\n    Typography,\r\n    TextField,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    Toolbar,\r\n} from '@material-ui/core';\r\n\r\nimport Texto from './texto';\r\nimport Archivos from './archivos';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport ListaEncriptada from './listaEncriptada';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteSession } from './../../redux/user';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Bitacora from '../bitacora';\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Encriptador() {\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    //section:Para uso del redux y la sesion de usuario\r\n    const userStore = useSelector((state) => state.user.session);\r\n    const dispatch = useDispatch();\r\n\r\n    const cerrarSesion = () => {\r\n        dispatch(deleteSession());\r\n    };\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            {userStore == null && <Redirect to=\"/\" />}\r\n            <div class=\"menu-izquierdo\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography className=\"grow-1\" variant=\"h5\" noWrap>\r\n                            Crypto Unach\r\n                        </Typography>\r\n                        <Bitacora />\r\n                        <Button\r\n                            onClick={cerrarSesion}\r\n                            endIcon={<ExitToAppIcon />}\r\n                            className=\"cerrar-sesion\"\r\n                            edge=\"end\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            Cerrar sesion\r\n                        </Button>\r\n                    </Toolbar>\r\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" variant=\"fullWidth\">\r\n                        <Tab label=\"Texto\" />\r\n                        <Tab label=\"Archivos\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value={value} index={0}>\r\n                    <Texto></Texto>\r\n                </TabPanel>\r\n\r\n                <TabPanel value={value} index={1}>\r\n                    <Archivos></Archivos>\r\n                </TabPanel>\r\n            </div>\r\n            <ListaEncriptada />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nimport { firestore } from '../../firebase';\r\nimport Crypter from '../../util/crypter';\r\nimport moment from 'moment';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setSelectedFile } from '../../redux/user';\r\n\r\nexport default function ListaEncriptada() {\r\n    const [lista, setLista] = useState([]);\r\n\r\n    useEffect(() => {\r\n        var firtTime = true;\r\n        var listaEscucha = [];\r\n        var ref = firestore.collection('data').onSnapshot((response) => {\r\n            var listaFinal = [];\r\n            response.forEach((el) => {\r\n                var object = el.data();\r\n                object.id = el.id;\r\n                if (!firtTime && !listaEscucha.some((lista) => lista.id === object.id)) {\r\n                    object.new = true;\r\n                }\r\n\r\n                listaFinal.push(object);\r\n            });\r\n            listaFinal = listaFinal.sort((a, b) => {\r\n                if (a.fecha.seconds < b.fecha.seconds) {\r\n                    return 1;\r\n                }\r\n                if (a.fecha.seconds > b.fecha.seconds) {\r\n                    return -1;\r\n                }\r\n                // a debe ser igual b\r\n                return 0;\r\n            });\r\n            setLista(listaFinal);\r\n            listaEscucha = listaFinal;\r\n            firtTime = false;\r\n        });\r\n        return () => {\r\n            ref();\r\n        };\r\n    }, []);\r\n\r\n    const dispatch = useDispatch();\r\n    const desencriptar = (doc) => {\r\n        dispatch(setSelectedFile(doc));\r\n    };\r\n\r\n    return (\r\n        <div class=\"menu-derecho\">\r\n            <div>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    {lista.map((objeto) => {\r\n                        var icono = '';\r\n                        if (objeto.tipo === 'documento') {\r\n                            icono = <DescriptionIcon />;\r\n                        } else {\r\n                            icono = <TextFieldsIcon />;\r\n                        }\r\n\r\n                        var nombre = Crypter.getDesencrypted(objeto.tipoEncriptacion, objeto.nombre);\r\n\r\n                        return (\r\n                            <ListItem button onClick={() => desencriptar(objeto)} className={objeto.new && 'new-item-list'}>\r\n                                <ListItemIcon>{icono}</ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={nombre}\r\n                                    secondary={moment.unix(objeto.fecha.seconds).format('LLLL')}\r\n                                />\r\n                            </ListItem>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { createElement, useEffect, useState } from 'react';\r\nimport { Button, AppBar, Box, Typography, Toolbar, LinearProgress, TextField } from '@material-ui/core';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport ListaEncriptada from './listaEncriptada';\r\nimport _ from 'lodash';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteSession } from '../../redux/user';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Crypter from './../../util/crypter';\r\nimport FileManager from './../../util/fileManager';\r\nimport firebase, { firestore } from './../../firebase';\r\nimport Bitacora from '../bitacora';\r\n\r\nexport default function Desencriptador() {\r\n    const [file, setFile] = useState({});\r\n    const [isEncrypted, setIsEncrypted] = useState(true);\r\n    const [linkArchivo, setLinkArchivo] = useState('');\r\n    const [isDocument, setIsDocument] = useState(false);\r\n\r\n    const [textoDesencriptado, setTextoDesencriptado] = useState('');\r\n\r\n    const [isDecrypting, setIsDecrypting] = useState(false);\r\n    const [textProgress, setTextProgress] = useState('');\r\n\r\n    //section:Para uso del redux y la sesion de usuario\r\n    const userStore = useSelector((state) => state.user.session);\r\n    const selectedFile = useSelector((state) => state.user.selectedFile);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (selectedFile !== null) {\r\n            console.log(selectedFile);\r\n            setFile(selectedFile);\r\n            if (selectedFile.tipo == 'documento') {\r\n                setIsDocument(true);\r\n            } else {\r\n                setIsDocument(false);\r\n            }\r\n            setIsEncrypted(true);\r\n        }\r\n    }, [selectedFile]);\r\n\r\n    const desencriptar = () => {\r\n        if (file.tipo == 'documento') {\r\n            setIsDecrypting(true);\r\n            setTextProgress('Descargando archivo...');\r\n            fetch(Crypter.getDesencrypted(file.tipoEncriptacion, file.contenido))\r\n                .then((resp) => resp.blob())\r\n                .then((originalFile) => {\r\n                    setTextProgress('Desencriptando archivo...');\r\n                    var reader = new FileReader();\r\n                    reader.readAsDataURL(originalFile);\r\n                    console.log(originalFile);\r\n                    reader.onload = (e) => {\r\n                        var text = e.target.result.split('base64,').pop();\r\n\r\n                        var typeFile = originalFile.type;\r\n                        var extension = typeFile.split('/').pop();\r\n\r\n                        text = Crypter.getDesencrypted(file.tipoEncriptacion, text);\r\n                        var fileName = Crypter.getDesencrypted(file.tipoEncriptacion, file.nombre);\r\n\r\n                        var blobDecrypted = FileManager.base64toBlob(text, typeFile);\r\n                        var url = window.URL.createObjectURL(blobDecrypted);\r\n\r\n                        // url += '.' + extension;\r\n\r\n                        console.log(extension);\r\n\r\n                        var link = (\r\n                            <Button variant=\"contained\" color=\"primary\" href={url} download={fileName}>\r\n                                Descargar archivo\r\n                            </Button>\r\n                        );\r\n                        setLinkArchivo(link);\r\n                        setIsDecrypting(false);\r\n                        setIsEncrypted(false);\r\n                        setBitacora();\r\n                    };\r\n                });\r\n        } else {\r\n            setTextoDesencriptado(Crypter.getDesencrypted(file.tipoEncriptacion, file.contenido));\r\n            setIsEncrypted(false);\r\n            setBitacora();\r\n        }\r\n    };\r\n\r\n    const setBitacora = () => {\r\n        firestore\r\n            .collection('bitacora')\r\n            .doc()\r\n            .set({\r\n                fecha: firebase.firestore.Timestamp.now(),\r\n                movimiento: Crypter.AESEncrypt(\r\n                    'El usuario ' +\r\n                        Crypter.AESDecrypt(userStore.usuario) +\r\n                        ' hizo una desencriptacion del archivo: ' +\r\n                        Crypter.getDesencrypted(file.tipoEncriptacion, file.nombre)\r\n                ),\r\n                tipoArchivo: Crypter.AESEncrypt(file.tipo),\r\n                usuario: userStore.usuario,\r\n            });\r\n    };\r\n\r\n    const cerrarSesion = () => {\r\n        dispatch(deleteSession());\r\n    };\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            {userStore == null && <Redirect to=\"/\" />}\r\n            <div class=\"menu-izquierdo\">\r\n                <AppBar position=\"relative\">\r\n                    <Toolbar>\r\n                        <Typography className=\"grow-1\" variant=\"h5\" noWrap>\r\n                            Crypto Unach\r\n                        </Typography>\r\n                        <Bitacora />\r\n                        <Button\r\n                            onClick={cerrarSesion}\r\n                            endIcon={<ExitToAppIcon />}\r\n                            className=\"cerrar-sesion\"\r\n                            edge=\"end\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            Cerrar sesion\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className=\"flex column center height-complete menu-desencriptado\">\r\n                    {!_.isEmpty(file) && (\r\n                        <div className=\"flex column center\" style={{ width: '80%' }}>\r\n                            <h2>{Crypter.getDesencrypted(file.tipoEncriptacion, file.nombre)}</h2>\r\n                            {isEncrypted && (\r\n                                <>\r\n                                    <LockIcon style={{ fontSize: 100, color: '#607d8b' }} />\r\n                                    <h3>Encriptado con {file.tipoEncriptacion}</h3>\r\n                                    <Button color=\"primary\" variant=\"contained\" onClick={desencriptar}>\r\n                                        Desencriptar\r\n                                    </Button>\r\n                                </>\r\n                            )}\r\n                            {isDecrypting && (\r\n                                <>\r\n                                    <h4 className=\"progress-text\">{textProgress}</h4>\r\n                                    <LinearProgress color=\"secondary\" />\r\n                                </>\r\n                            )}\r\n                            {isDocument && !isEncrypted && (\r\n                                <>\r\n                                    <LockOpenIcon style={{ fontSize: 100, color: '#4caf50' }} />\r\n                                    <h3 className=\"progress-text\">\r\n                                        ¡Listo!. <br /> Archivo desencriptado exitosamente\r\n                                    </h3>\r\n                                    {linkArchivo}\r\n                                </>\r\n                            )}\r\n                            {!isDocument && !isEncrypted && (\r\n                                <>\r\n                                    <LockOpenIcon style={{ fontSize: 100, color: '#4caf50' }} />\r\n                                    <h3 className=\"progress-text\">\r\n                                        ¡Listo!. <br /> Archivo desencriptado exitosamente\r\n                                    </h3>\r\n                                    <TextField\r\n                                        id=\"filled-basic\"\r\n                                        label=\"Filled\"\r\n                                        variant=\"filled\"\r\n                                        multiline={true}\r\n                                        rows={15}\r\n                                        value={textoDesencriptado}\r\n                                        style={{ alignSelf: 'normal' }}\r\n                                    />\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {_.isEmpty(file) && <h2>Seleccione un archivo de la lista para desencriptar</h2>}\r\n                </div>\r\n            </div>\r\n            <ListaEncriptada />\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n// IMPORTACION DE COMPONTENTES/RUTAS\r\n\r\nimport Login from './pages/login';\r\nimport Encriptador from './pages/encriptador/encriptador';\r\nimport Desencriptador from './pages/desencriptador/desencriptador';\r\nexport default class Router extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Login} />\r\n                    <Route exact path=\"/encriptador\" component={Encriptador} />\r\n                    <Route exact path=\"/desencriptador\" component={Desencriptador} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n//REDUCERS\r\nimport userReducer from \"./user\"\r\n//LISTA DE REDUCERS\r\nconst rootReducer = combineReducers({\r\n    user: userReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport default function generateStore() {\r\n    const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n    return store;\r\n}\r\n","import './App.css';\nimport './styles/styles.css';\nimport Router from './router';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport 'moment/locale/es';\n//redux\nimport { Provider } from 'react-redux';\nimport generateStore from './redux/store';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#6ec6ff',\n            main: '#2196f3',\n            dark: '#0069c0',\n            contrastText: '#000',\n        },\n        secondary: {\n            light: '#ffd95b',\n            main: '#ffa726',\n            dark: '#c77800',\n            contrastText: '#000',\n        },\n    },\n});\nfunction App() {\n    moment.locale('es');\n    const store = generateStore();\n    return (\n        <ThemeProvider theme={theme}>\n            <Provider store={store}>\n                <Router />\n            </Provider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}